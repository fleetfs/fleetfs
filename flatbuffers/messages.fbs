namespace generated;

union RequestType {ReadRequest, GetattrRequest, MkdirRequest, ReaddirRequest, RenameRequest,
                   UtimensRequest, ChmodRequest, HardlinkRequest, TruncateRequest, UnlinkRequest,
                   WriteRequest, FilesystemChecksumRequest, FilesystemCheckRequest}

table GenericRequest {
  request: RequestType;
}

table FilesystemChecksumRequest {
}

table FilesystemCheckRequest {
}

table ReadRequest {
  offset: ulong;
  read_size: uint;
  path: string (required);
}

table GetattrRequest {
  path: string (required);
}

table MkdirRequest {
  path: string (required);
  mode: ushort;
  forward: bool = true;
}

table WriteRequest {
  path: string (required);
  offset: ulong;
  data: [ubyte] (required);
  forward: bool = true;
}

table UnlinkRequest {
  path: string (required);
  forward: bool = true;
}

table TruncateRequest {
  path: string (required);
  new_length: ulong;
  forward: bool = true;
}

table ReaddirRequest {
  path: string (required);
}

table ChmodRequest {
  path: string (required);
  mode: uint;
  forward: bool = true;
}

table UtimensRequest {
  path: string (required);
  atime: Timestamp;
  mtime: Timestamp;
  forward: bool = true;
}

table HardlinkRequest {
  path: string (required);
  new_path: string (required);
  forward: bool = true;
}

table RenameRequest {
  path: string (required);
  new_path: string (required);
  forward: bool = true;
}

root_type GenericRequest;

enum ErrorCode: byte {
  DefaultValueNotAnError = 0,
  DoesNotExist,
  Corrupted,
  RaftFailure,
  Uncategorized
}

table ErrorResponse {
  error_code: ErrorCode;
}

table ReadResponse {
  data: [ubyte] (required);
}

table EmptyResponse {
}

struct Timestamp {
  seconds: long;
  nanos: int;
}

enum FileKind: ubyte {
  DefaultValueNotAType,
  File,
  Directory
}

table DirectoryEntry {
  path: string (required);
  kind: FileKind;
}

table DirectoryListingResponse {
  entries: [DirectoryEntry] (required);
}

table WrittenResponse {
  bytes_written: uint;
}

table FileMetadataResponse {
  size_bytes: ulong;
  size_blocks: ulong;
  last_access_time: Timestamp (required);
  last_modified_time: Timestamp (required);
  last_metadata_modified_time: Timestamp (required);
  kind: FileKind;
  mode: ushort;
  hard_links: uint;
  user_id: uint;
  group_id: uint;
  device_id: uint;
}

union ResponseType { EmptyResponse, ErrorResponse, ReadResponse, FileMetadataResponse, DirectoryListingResponse, WrittenResponse }

table GenericResponse {
  response: ResponseType;
}
